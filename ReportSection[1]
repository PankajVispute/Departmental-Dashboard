
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" >
<head>
    <title>Power BI</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge;" />

    <meta charset="utf-8">
    <meta name="description" content="">
    <meta name="format-detection" content="telephone=no" />

    <link rel="shortcut icon" href="/images/PowerBI_Favicon.ico"/>
    
            <meta name="ms-store-phone-tracking" content="https://go.microsoft.com/fwlink/?linkid=2208211">
            <meta name="google-play-app-tracking" content="https://go.microsoft.com/fwlink/?linkid=2208306">
            <meta name="msApplication-WinPhonePackageUrl" content="">

    <meta name="google-play-app" content="app-id=com.microsoft.powerbim">
    <meta name="google-play-app-tab" content="app-id=com.microsoft.powerbim">
    <meta http-equiv="x-dns-prefetch-control" content="on">
    <link rel="dns-prefetch" href="https://api.powerbi.com">

    <base href="/" />
<script>
        var powerbi = {};

    var baseUrl = window.location.protocol + "//" + window.location.host;
    powerbi.telemetrySamplingRules = { appInsights: [{ purpose: "CriticalError", sampleRate: 1 },{ purpose: "CustomerAction", sampleRate: 1 },{ purpose: "Verbose", sampleRate: 1 }], perf: [{ purpose: "CriticalError", sampleRate: 1 },{ purpose: "CustomerAction", sampleRate: 1 },{ purpose: "Verbose", sampleRate: 1 }] };

    powerbi.build = '13.0.21358.61';
    powerbi.buildDetails = '13.0.21358.61';
    powerbi.clientVersion = '2308.2.15305-train';
    powerbi.common = {};
    powerbi.common.cultureInfo = 'en-US';
    powerbi.common.unmappedCultureInfo = undefined;
    powerbi.common.formattingLocale = 'en-US';
    powerbi.common.isCurrentContextRtl = 'False';
    powerbi.visualCDNBlobContainerUrl = 'prod';
    powerbi.cvUrl = 'https://pbivisuals.powerbi.com';
    var emUseCDN = true;
    var externalMigration = true;
    var useCDN = 'True';
    var cdnUrl = 'https://content.powerapps.com/resource/powerbiwfe';
    var apiUri =  'https://api.powerbi.com';
    var previousTenantId =  '';
    var allowTelemetry = true;
    var appInsightsV2InstrKey = 'e43fee4d-90d5-4c2a-a681-cffdd604ad5c';
    var appInsightsV2EndpointUrl = '';
    var triShellAppInsightsV2ConnectionInfo = 'InstrumentationKey=433d8c1b-e63d-4935-8917-fbb39ecb7b51;IngestionEndpoint=https://eastus-8.in.applicationinsights.azure.com/';
    var telemetrySessionId =  '620e6102-6d46-4727-ab92-2de804e38f31';
    var optimizedAppMetadataForAppLandingEnabledForBootstrap = 'true';
    var requestWV2First = true;
    var powerBIGoalsEnabledForBootstrap = false;
    var powerBISpinnerImprovements = true;
    var embeddedWebContentIframeSource = 'https://app.pbiwebcontent.com/webcontentsandbox.html';
    var supportedSaasMarketplaceRedirects = 'https://local.spza.microsoft-int.com;https://appsource.microsoft.com;https://appgallery.spza-staging.net;https://appgallery.spza-internal.net';
    var saasMarketplaceUrlOrigin = 'https://appsource.microsoft.com';
    var npsUrlOrigin = 'https://nps.onyx.azure.net';
    var npsNewUrlOrigin = 'https://world.ces.microsoftcloud.com';
    var feUrl = 'https://app.powerbi.com';
    var extensionUrls = {'rfx': 'https://pbirfx.powerbi.com', 'dfw': 'https://pbidfw.powerbi.com', 'dpe': 'https://pbidpe.powerbi.com', 'lhe': 'https://pbilhe.powerbi.com', 'des': 'https://pbides.powerbi.com', 'spc': 'https://pbispc.powerbi.com', 'adx': 'https://pbiadx.powerbi.com', 'stm': 'https://pbistm.powerbi.com', 'scc': 'https://digitalsupplychain.microsoft.com', 'adf': 'https://pbiadf.powerbi.com' };
    var icpLicense = '京ICP备09042378号-17';
    var environmentName = 'PROD';
    var buyFabricLink = 'https://aka.ms/fabricibiza';
    var arcAPIUrl = 'https://arc.msn.com/v4/api/selection?placement=88000350';
    var arcResourceUri = 'https://arc.msn.com/v4';
    var downloadAndroidAppFWlink = 'https://go.microsoft.com/fwlink/?LinkId=544867';
    var downloadPageFWlink = 'https://go.microsoft.com/fwlink/?linkid=526501';
    var reflexAud = 'https://prod.reflex.ms/.default';
    var reflexUrl = 'https://neu.rmm.api.prd.trafficmanager.net/api/v1';
    var powerBIOperator = '';
    var powerBIOperatorLocale = '';
    var o365AdminPurchaseCapacityPageUrl = 'https://portal.office.com/adminportal/home#/catalog';
    var o365PortalUrl = 'https://portal.office.com';
    var disableSignin = false;
    var xmlaEndpointApiDNSName = 'api.powerbi.com';

    var premCapacityMetricsAppAdminUrl = 'https://go.microsoft.com/fwlink/?linkid=2114036';
    var microsoftGraphUrl = 'https://graph.microsoft.com';
    var layoutTheme = 'fluent-no-header-teal';
    var getAppInsightsConnectionString = true;
    var globalUseNativePromise = 'false';
    var adminCenterSupportPageUrl = 'https://aka.ms/contact-support';
    var wfeClusterName = 'app-PBI-WFE-INDIA-WEST';
    var supportPageUrl = 'https://support.powerbi.com';
    var documentationUrl = 'https://go.microsoft.com/fwlink/?linkid=2125441';
</script>
    
    <link rel="stylesheet" href="https://content.powerapps.com/resource/powerbiwfe/styles/powerbiportal.bundle.min.eece2f1f934c0974cb50.css" onerror=cdnFallback(event) />


</head>
<body>
    









<div id="pbi-svg-loading" class="wfe-loading"><div class="pbi-svg-item"><img src="https://content.powerapps.com/resource/powerbiwfe/images/spinner-PBI-logo.6434e0fca135a582c323.svg" width="61" height="81"/><div class="shine"></div></div><div class="microsoft-svg-item"><img src="https://content.powerapps.com/resource/powerbiwfe/images/microsoft_logo.c09ca4bc0d7a834baaec.svg" /></div></div>

<!-- This div should only contain the ui-view element -->
<div id='pbiAppPlaceHolder' class="themeYellowDark">
    <root></root>
    <root-downgrade></root-downgrade>
</div>

    
    <script> function cdnFallback(event) {var date = new Date(); var failedRequestUrl = 'unknown'; var maxAgeInSeconds = 8 * 60 * 60;if (event && event.currentTarget && event.currentTarget.src) {failedRequestUrl = event.currentTarget.src;}try { document.cookie = 'disablecdn=cdnRequestFailureTimestamp:' + date.toUTCString() + '-cdnRequestFailureUrl:' + failedRequestUrl + '; max-age=' + maxAgeInSeconds + '; secure';} catch (err) {}if (true) { var newUrl = new URL(window.location.href);newUrl.searchParams.set('disablecdnExpiration', String(Math.round(new Date() / 1000 + maxAgeInSeconds)));window.location.href = newUrl.href; } else { window.location.reload(true); } }</script>

    <script type="text/javascript">this.parseTimeMarkers = this.parseTimeMarkers || {}; this.parseTimeMarkers['polyfills.min.js'] = { nominalStart: Date.now(), start: Date.now(), initial: true }; </script>
<script type="text/javascript" src="https://content.powerapps.com/resource/powerbiwfe/scripts/polyfills.min.63b2dbfb9c3cf4514773.js"  nomodule  onerror=cdnFallback(event) ></script>
<script type="text/javascript">this.parseTimeMarkers['polyfills.min.js'].end = Date.now();</script>

    <script type="text/javascript">
        var o365AdminUserPageUrl = "https://portal.office.com/admin/default.aspx#ActiveUsersPage",
            o365SccPortalPageUrl = "https://aka.ms/dpfwl15",
            o365AdminAuditingPageUrl = "https://compliance.microsoft.com/auditlogsearch",
            mcasUrl = "https://aka.ms/AA55xn1",
            dataGatewaysAdminUrl = "https://go.microsoft.com/fwlink/?linkid=2171042",
            gatewayAdminPortalUrl = "https://gatewayadminportal.azure.com",
            gatewayAdminPortalProxyUrl = "https://pbigap.powerbi.com",
            playgroundUrl="https://playground.powerbi.com/",
            appmetadataRequestId = "a3dcf5c7-3218-484a-a94a-ebb67572eb1d",
            appmetadataRetryRequestId = "a2f41a72-4a39-4a9a-9987-91ccb59c32f6",
            conceptualSchemaRequestId = "d0bc7fc4-6888-4a81-a966-4f736dc4a88a",
            pbiResourceUrl = "https://analysis.windows.net/powerbi/api",
            pbiTeamsAppId = "1c4340de-2a85-40e5-8eb0-4f295368978b",
            explorationsRequestId = "45261eb3-2d95-405e-ba00-3a6990b325bc",
            teamsUrl = "https://teams.microsoft.com",
            clusterAssignmentRecord = null,
            clusterUri = 'https://api.powerbi.com',
        azurePortalUrl = "https://portal.azure.com/";
        clusterOriginUrl = "https://52.136.48.124/";
        inTeams = false;
        inVSCode = false;
        staticPageRedirectInTeams = true;
        isNotificationView = false;
        aadConsistencyHeaderScenarioId = "";
        privateLinkHeaderPresent = false;
        storytellingAssetId = "WA200003233";
        storytellingFileName = "Microsoft-Power-BI-Storytelling.pptx";
        storytellingManifest = "MicrosoftPowerBI.xml";
        exportToPPTLiveEnabled = true;
        webServiceWorkerEnabled = false;
        chatWidgetDataAppId = "f01f329b-8e21-49ff-b712-5097e5697adb";
        chatWidgetDataOrgId = "27c9d945-50c6-ec11-8e77-000d3a9d51f1";
        chatWidgetDataOrgUrl = "https://unq27c9d94550c6ec118e77000d3a9d5-crm.omnichannelengagementhub.com";
        powerBILocalFrontEndUrl = "https://portal.analysis.windows-int.net";
        pbiSource = "";
        powerQueryResourceName = "https://powerquery.microsoft.com";
        defaultFabricHome = false;



        var templateAppsInstallTicket = undefined;

        var cachedEvents = [];
        window.logEvent = function(event) {
            cachedEvents.push(event);
        }
    </script>

    <script>
        var powerbi = window.powerbi || {};
        var CAEAuth = "False" === "True" ? true : false;
        var clientAuthEnabled = "True" === "True" ? true : false;
        var clientAuthAltAppsEnabled = "False" === "True" ? true : false;
        var clientAuthSecureEmbedEnabled = "False" === "True" ? true : false;
        var clientAuthOnboardingEmbedEnabled = "False" === "True" ? true : false;
        var clientAuthInSignInPageContext = "False" === "True" ? true : false;
        var clientAuthEagerlyLogTelemetry = "False" === "True" ? true : false;
        var clientAuthAadInstance = "https://login.microsoftonline.com/{0}";
        var clientAuthClientId = "871c010f-5e61-4fb1-83ac-98610a7e9110";
        var clientAuthResourceUrl = "https://analysis.windows.net/powerbi/api";
        var clientAuthApiUrl = "https://api.powerbi.com";
        var clientAuthApimUrl = "https://WABI-INDIA-WEST-api.analysis.windows.net";
        var clientAuthClusterUrl = "https://WABI-INDIA-WEST-redirect.analysis.windows.net";
        var clientAuthAllowConsumerDomains = "True" === "True" ? true : false;
        var clientAuthWfeSessionId = "620e6102-6d46-4727-ab92-2de804e38f31";
        var clientAuthAllowedTenantIdsFilterEnabled = "False" === "True" ? true : false;
        var clientAuthAllowedTenantIds = "";
        var clientAuthUnallowedTenantRedirect = "";
        var clientAuthFallbackToServerOnError = "True" === "True" ? true : false;
        var clientAuthTenantEnvironmentRedirect = "True" === "True" ? true : false;
        var clientAuthTenantEnvironmentRedirectMapping = "72f988bf-86f1-41af-91ab-2d7cd011db47,https://msit.powerbi.com;975f013f-7f24-47e8-a7d3-abc4752bf346,https://msit.powerbi.com";
        var clientAuthRedirectChecks = "True" === "True" ? true : false;
        var clientAuthOfficeResponseRedirectUrl_DomainNotAllowed = "https://go.microsoft.com/fwlink/?LinkId=617513";
        var clientAuthOfficeResponseRedirectUrl_UnsupportedRegion = "https://go.microsoft.com/fwlink/?LinkId=617513";
        var clientAuthRequireUserSignUpCheck = "True" === "True" ? true : false;
        var clientAuthSignUpRedirectUrl = "https://powerbi.microsoft.com/landing/signin";
        var clientAuthCheckOfficeDefaultSignIn = "True" === "True" ? true : false;
        var clientAuthPrivateLinkHeaderPresent = "False" === "True" ? true : false;
        var clientAuthAccessTokenPresentInRequestBody = "False" === "True" ? true : false;
        var clientAuthDefaultSignInCheck = "True" === "True" ? true : false;
        var clientAuthPleaseWaitDelayInSeconds = "15";
        var clientAuthTimeoutIncrease = "True" === "True" ? true : false;
        var clientAuthAppName = 'Web';
        var clientSideAuthStorytellingEnabled = "False" === "True" ? true : false;
        var clientAuthSharePointListEnabled = "True" === "True" ? true : false;
    </script>
<script type="text/javascript">this.parseTimeMarkers = this.parseTimeMarkers || {}; this.parseTimeMarkers['signInProvider.min.js'] = { nominalStart: Date.now(), start: Date.now(), initial: true }; </script>
<script type="text/javascript" src="https://content.powerapps.com/resource/powerbiwfe/scripts/signInProvider.min.26c4465e1509ab909557.js"  onerror=cdnFallback(event) ></script>
<script type="text/javascript">this.parseTimeMarkers['signInProvider.min.js'].end = Date.now();</script>
    <script>
        window.clientAuthProvider.signIn();
    </script>
        <script>
        var baseMetadataFromClient = true;
        var baseMetadataRequestId = '178744c8-3278-4458-9a4d-5f5fd70baf70';
        var baseMetadataRetryRequestId = 'bc12772e-3836-4cb0-ae80-79db284310c4';
        var placeBrandingInfoOnPage = true;
        var placeExpAssignmentContextOnPage = true;
        var placeAutoLicenseAssignmentStateOnPage = true;

    </script>
<script type="text/javascript">this.parseTimeMarkers = this.parseTimeMarkers || {}; this.parseTimeMarkers['baseMetadataProvider.min.js'] = { nominalStart: Date.now(), start: Date.now(), initial: true }; </script>
<script type="text/javascript" src="https://content.powerapps.com/resource/powerbiwfe/scripts/baseMetadataProvider.min.754a0265c2ba639e5fed.js"  onerror=cdnFallback(event) ></script>
<script type="text/javascript">this.parseTimeMarkers['baseMetadataProvider.min.js'].end = Date.now();</script>


    <script type="text/javascript">this.parseTimeMarkers = this.parseTimeMarkers || {}; this.parseTimeMarkers['powerBIWebBootstrap.min.js'] = { nominalStart: Date.now(), start: Date.now(), initial: true }; </script>
<script type="text/javascript" src="https://content.powerapps.com/resource/powerbiwfe/scripts/powerBIWebBootstrap.min.6e8bf08280ad38283611.js"  onerror=cdnFallback(event) ></script>
<script type="text/javascript">this.parseTimeMarkers['powerBIWebBootstrap.min.js'].end = Date.now();</script>


        <script>
        // Implement enqueueCommand inline and defer localytics loading so page load is not blocked
        LocalyticsGlobal = 'localytics';
        localytics = { enqueueCommand: function () { this.q.push(arguments); }, t: Number(new Date), q: [] };
    </script>
<script type="text/javascript">this.parseTimeMarkers = this.parseTimeMarkers || {}; this.parseTimeMarkers['jquery.globalize/globalize.min.js'] = { nominalStart: Date.now(), start: Date.now(), initial: true }; </script>
<script type="text/javascript" src="https://content.powerapps.com/resource/powerbiwfe/scripts/jquery.globalize/globalize.min.8e8ec43af69cf3d5d7aa.js" defer   onerror=cdnFallback(event) ></script>
<script type="text/javascript">this.parseTimeMarkers['jquery.globalize/globalize.min.js'].end = Date.now();</script>
<script type="text/javascript">this.parseTimeMarkers = this.parseTimeMarkers || {}; this.parseTimeMarkers['jquery.globalize/globalize.culture.en-US.js'] = { nominalStart: Date.now(), start: Date.now(), initial: true }; </script>
<script type="text/javascript" src="https://content.powerapps.com/resource/powerbiwfe/scripts/jquery.globalize/globalize.culture.en-US.07ca294f77f622a072a5.js" defer   onerror=cdnFallback(event) ></script>
<script type="text/javascript">this.parseTimeMarkers['jquery.globalize/globalize.culture.en-US.js'].end = Date.now();</script>
<script type="text/javascript">this.parseTimeMarkers = this.parseTimeMarkers || {}; this.parseTimeMarkers['em-hash-manifest.js'] = { nominalStart: Date.now(), start: Date.now(), initial: true }; </script>
<script type="text/javascript" src="13.0.21358.61/ExternalMigration/scripts/em-hash-manifest.js"  onerror=cdnFallback(event) ></script>
<script type="text/javascript">this.parseTimeMarkers['em-hash-manifest.js'].end = Date.now();</script>
<script type="text/javascript">this.parseTimeMarkers = this.parseTimeMarkers || {}; this.parseTimeMarkers['powerbiportal.dependencies.externals.bundle.min.js'] = { nominalStart: Date.now(), start: Date.now(), initial: true }; </script>
<script type="text/javascript" src="https://content.powerapps.com/resource/powerbiwfe/scripts/powerbiportal.dependencies.externals.bundle.min.9cb93e29f9d05a96005a.js"  onerror=cdnFallback(event) ></script>
<script type="text/javascript">this.parseTimeMarkers['powerbiportal.dependencies.externals.bundle.min.js'].end = Date.now();</script>
    <script>

        powerbi.common.localizedStrings = '';
    </script>
<script type="text/javascript">this.parseTimeMarkers = this.parseTimeMarkers || {}; this.parseTimeMarkers['jquery-ui.min.js'] = { nominalStart: Date.now(), start: Date.now(), initial: true }; </script>
<script type="text/javascript" src="https://content.powerapps.com/resource/powerbiwfe/scripts/jquery-ui.min.54471b21b524931a54a1.js"  onerror=cdnFallback(event) ></script>
<script type="text/javascript">this.parseTimeMarkers['jquery-ui.min.js'].end = Date.now();</script>
<script type="text/javascript">this.parseTimeMarkers = this.parseTimeMarkers || {}; this.parseTimeMarkers['stylelibrary.min.js'] = { nominalStart: Date.now(), start: Date.now(), initial: true }; </script>
<script type="text/javascript" src="https://content.powerapps.com/resource/powerbiwfe/scripts/stylelibrary.min.f0bf5f601b4c794b3420.js"  onerror=cdnFallback(event) ></script>
<script type="text/javascript">this.parseTimeMarkers['stylelibrary.min.js'].end = Date.now();</script>
<script type="text/javascript">this.parseTimeMarkers = this.parseTimeMarkers || {}; this.parseTimeMarkers['web.vendors.min.js'] = { nominalStart: Date.now(), start: Date.now(), initial: true }; </script>
<script type="text/javascript" src="https://content.powerapps.com/resource/powerbiwfe/scripts/web.vendors.min.8fe85032bb4160e13703.js"  onerror=cdnFallback(event) ></script>
<script type="text/javascript">this.parseTimeMarkers['web.vendors.min.js'].end = Date.now();</script>
<script type="text/javascript">this.parseTimeMarkers = this.parseTimeMarkers || {}; this.parseTimeMarkers['web.clients.min.js'] = { nominalStart: Date.now(), start: Date.now(), initial: true }; </script>
<script type="text/javascript" src="https://content.powerapps.com/resource/powerbiwfe/scripts/web.clients.min.28b7bdac8f9a11c1d509.js"  onerror=cdnFallback(event) ></script>
<script type="text/javascript">this.parseTimeMarkers['web.clients.min.js'].end = Date.now();</script>
<script type="text/javascript">this.parseTimeMarkers = this.parseTimeMarkers || {}; this.parseTimeMarkers['web.min.js'] = { nominalStart: Date.now(), start: Date.now(), initial: true }; </script>
<script type="text/javascript" src="https://content.powerapps.com/resource/powerbiwfe/scripts/web.min.b5215ee92d3dbfba23c2.js"  onerror=cdnFallback(event) ></script>
<script type="text/javascript">this.parseTimeMarkers['web.min.js'].end = Date.now();</script>


    <script type="text/javascript">
        var app = window.web;
        // In iOS the existance of the meta tag will cause the native banner to appear.
        // If a certain meta tag doesn't exist for a particular environment, the banner will not show.
        // We will need to force the type to windows-phone (which is not supported and there for will not be compermised)
        // and override the link url using a different tag.
        const isIOS = () => {
            return [
                'iPad Simulator',
                'iPhone Simulator',
                'iPad',
                'iPhone',
            ].includes(navigator.platform)
            // iPad on iOS 13 detection
            || (navigator.userAgent.includes("Mac") && "ontouchend" in document)
        }

        const isArtifactLanding = true;
        if ($.smartbanner) {
            $.smartbanner({
                title: 'Power BI',
                author: 'Microsoft',
                icon: powerbi.build + '/images/android_banner_appIcon.png',
                force: isIOS() && isArtifactLanding ? 'windows-phone' : undefined,
                inWindowsStore: isIOS() && isArtifactLanding ? 'On the App Store' : undefined
            });
        }
    </script>

    <script type="text/javascript">
        document.onreadystatechange = () => upsertApplicationStateChange(document.readyState);
        document.addEventListener('DOMContentLoaded', () => upsertApplicationStateChange("documentContentLoaded"));
        window.addEventListener('load', () => upsertApplicationStateChange('windowLoaded'));

        function upsertApplicationStateChange(state) {

            if (!window.applicationState) {
                window.applicationState = {};
            }

            var timestamp = new Date().getTime();
            if (window.performance && window.performance.timeOrigin && window.performance.now) {
                timestamp = window.performance.timeOrigin + window.performance.now();
            }

            window.applicationState[state] = timestamp;
        }
    </script>

</body>
</html>
